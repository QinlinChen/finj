/* Generated by genhack.py */
#include "finj/config.h"
#include "finj/sys.h"

#include <stdarg.h>
#include <grp.h>
#include <pwd.h>
#include <dirent.h>
#include <sys/mman.h>

#include "finj/core.h"
#include "finj/utils.h"

int finj_open(const char * pathname, int flags, ...)
{
    if (checkpoint("open", "unknown", "unknown", 0)) {
        static int table[] = {
            EACCES, EEXIST, EFAULT, EINTR, EINVAL, EISDIR, ELOOP, ENAMETOOLONG, ENFILE, ENOENT, ENOSPC, ENOTDIR, EOVERFLOW, EPERM
        };
        errno = RAND_CHOOSE_FROM(table);
        return -1;
    }

    mode_t mode = 0;
    if (flags & O_CREAT) {
        va_list ap;
        va_start(ap, flags);
        mode = va_arg(ap, mode_t);
        va_end(ap);
    }

    return open(pathname, flags, mode);
}

int finj_openat(int dirfd, const char * pathname, int flags, ...)
{
    if (checkpoint("openat", "unknown", "unknown", 0)) {
        static int table[] = {
            EACCES, EEXIST, EFAULT, EINTR, EINVAL, EISDIR, ELOOP, ENAMETOOLONG, ENFILE, ENOENT, ENOSPC, ENOTDIR, EOVERFLOW, EPERM
        };
        errno = RAND_CHOOSE_FROM(table);
        return -1;
    }

    mode_t mode = 0;
    if (flags & O_CREAT) {
        va_list ap;
        va_start(ap, flags);
        mode = va_arg(ap, mode_t);
        va_end(ap);
    }

    return openat(dirfd, pathname, flags, mode);
}

{% for func_info in func_infos %}
{{ func_info.ret_type }} finj_{{ func_info.name }}({{ func_info.params_str() }})
{
    if (checkpoint("{{ func_info.name }}", "unknown", "unknown", 0)) {
{%- if func_info.errnos %}
        static int table[] = {
            {{ func_info.errnos_str() }}
        };
        errno = RAND_CHOOSE_FROM(table);
{%- endif %}
        return {{ func_info.ret_val }};
    }
    return {{ func_info.name }}({{ func_info.args_str() }});
}
{% endfor %}
